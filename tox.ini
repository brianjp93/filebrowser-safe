[tox]
skip_missing_interpreters = true
envlist =
    py{36,37,38,39}-dj{22,30,31,32}
    flake8
    black
    package
    isort

[testenv]
# Run test suite
usedevelop = true
deps =
    .[testing]
    dj22: Django>=2.2, <3
    dj30: Django>=3.0, <3.1
    dj31: Django>=3.1, <3.2
    dj32: Django>=3.2, <3.3
commands =
    pytest --basetemp="{envtmpdir}" --junitxml="junit/TEST-{envname}.xml" {posargs}

[testenv:package]
# Check package integrity and compatibility with PyPI
deps =
    twine
    check-manifest
skip_install = true
commands =
    python setup.py -q sdist --dist-dir="{envtmpdir}/dist"
    twine check "{envtmpdir}/dist/*"
    check-manifest --ignore-bad-ideas '*.mo' {toxinidir}

[testenv:black]
skip_install = true
deps = .[codestyle]
commands = black . --check

[testenv:flake8]
skip_install = true
deps = .[codestyle]
commands = flake8 .

[testenv:isort]
skip_install = true
deps = .[codestyle]
commands = isort --diff --atomic .

[testenv:pyupgrade]
# Run pyupgrade with non-zero exit code (notice `+` at the end of command)
skip_install = true
allowlist_externals = sh
deps = .[codestyle]
commands =
    sh -c 'find . -type f -name "*.py" -not -path "./.tox/*" -exec pyupgrade --py36-plus \{\} +'

[testenv:format]
# This env is not run by default. It's provided here for you to easily
# autoformat code by running `tox -e format`
skip_install = true
allowlist_externals = sh
deps = .[codestyle]
commands =
    sh -c 'find . -type f -name "*.py" -not -path "./.tox/*" -exec pyupgrade --py36-plus \{\} \;'
    black .
    isort --atomic .

[flake8]
# Configured to match black
ignore =
    E203
    W503
    E731
max-line-length = 88
exclude =
    migrations
    .tox
    .git
    .eggs
    *.egg-info
    build
    dist

[gh-actions]
# Connect GitHub Action matrices with tox envs
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
